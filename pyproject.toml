[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "ramalama"
version = "0.10.1"
description = "RamaLama is a command line tool for working with AI LLM models."
readme = "README.md"
requires-python = ">=3.10"
keywords = ["ramalama", "llama", "AI"]
dependencies = [
  "argcomplete",
]
maintainers = [
   { name="Dan Walsh", email = "dwalsh@redhat.com" },
   { name="Eric Curtin", email = "ecurtin@redhat.com" },
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "argcomplete~=3.0",
    "black~=25.0",
    "codespell~=2.0",
    "flake8~=7.0",
    "huggingface_hub~=0.33.0",
    "isort~=6.0",
    "pytest~=8.3",
    "wheel~=0.45.0",
    "mypy",
    "tox",
    "requests"
]

cov = [
    "pytest-cov",
]

cov-detailed = [
    "pytest-cov",
    "pytest-func-cov",
    "pytest-report",
    "pytest-json",
    "pytest-html"
]

[project.urls]
Homepage = "https://github.com/containers/ramalama"
Documentation = "https://github.com/containers/ramalama/tree/main/docs"
Repository = "https://github.com/containers/ramalama"
Issues = "https://github.com/containers/ramalama/issues"

[project.scripts]
ramalama = "ramalama.cli:main"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]

[tool.black]
line-length = 120
skip-string-normalization = true
preview = true
target-version = ["py310", "py311", "py312", "py313"]
extend-exclude = "(.history|build|dist|docs|hack)"

[tool.isort]
profile = "black"
line_length = 120
skip = [".venv", "venv", ".tox"]

[tool.codespell]
skip = ["build","ramalama.egg-info", "logos", ".git", "venv", ".venv", ".tox"]
dictionary = ".codespelldict"
ignore-words-list = ["cann", "clos", "creat", "ro", "hastable", "shouldnot", "mountns", "passt" ,"assertin"]
check-hidden = true

[tool.ruff]
line-length = 120
target-version = "py312"
include = ["\\.pyi?$"]
exclude = [
  "/\\.git",
  "/\\.tox",
  "/\\.venv",
  "/\\.history",
  "/build",
  "/dist",
  "/docs",
  "/hack",
  "/venv"
]

[tool.ruff.format]
preview = true
quote-style = "preserve"

[tool.coverage]
html.directory = "coverage/html"
xml.output = "coverage/coverage.html"
json.output = "coverage/coverage.json"
lcov.output = "coverage/coverage.lcov"

[tool.pytest.ini_options]
testpaths = ["test"]
markers = ["e2e", "distro_integration"]
addopts = "-m 'not e2e' --color=yes"

[tool.setuptools.packages.find]
include = ["ramalama", "ramalama.*"]

[tool.setuptools.data-files]
"share/ramalama" = ["shortnames/shortnames.conf"]
"share/man/man1" = ["docs/*.1"]
"share/man/man5" = ["docs/*.5"]
"share/man/man7" = ["docs/*.7"]
"share/bash-completion/completions" = ["completions/bash-completion/completions/*"]
"share/zsh/site-functions" = ["completions/zsh/site-functions/*"]
"share/fish/vendor_completions.d" = ["completions/fish/vendor_completions.d/*"]

[tool.tox]

[tool.tox.env_run_base]
extras = ["dev", "cov"]
pass_env = [
  "GITHUB_ACTIONS",
]
commands = [
  [
    "pytest",
    "--cov={toxinidir}/ramalama",
    "-vvv",
    "--tb=short",
    "--basetemp={envtmpdir}",
    { replace = "posargs", extend = true },
  ],
]

[tool.tox.env.e2e]
commands = [
  [
    "pytest",
    "-m", "e2e",
    "-vvv",
    "--basetemp={envtmpdir}",
    "--tb=short",
    { replace = "posargs", extend = true },
  ],
]

[tool.tox.env.coverage]
extras = ["dev", "cov", "cov-detailed"]
commands = [
  [
    "pytest",
    "--cov={toxinidir}/ramalama",
    "--cov-report=xml",
    "--cov-report=html",
    "--cov-report=json",
    "--cov-report=lcov",
    "--cov-report=term",
    "--tb=short",
    "--basetemp={envtmpdir}",
    { replace = "posargs", extend = true },
  ],
]
